/**
 * @license
 * Copyright 2022 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { __decorate } from "tslib";
import { property, state } from 'lit/decorators.js';
import { ListItemEl } from '../../../list/internal/listitem/list-item.js';
import { CLOSE_REASON, createDefaultCloseMenuEvent, isClosableKey } from '../shared.js';
/**
 * @fires close-menu {CloseMenuEvent}
 */
export class MenuItemEl extends ListItemEl {
    constructor() {
        super(...arguments);
        /**
         * READONLY: self-identifies as a menu item and sets its identifying attribute
         */
        this.isMenuItem = true;
        /**
         * Keeps the menu open if clicked or keyboard selected.
         */
        this.keepOpen = false;
        this.hasFocusRing = false;
        /**
         * Used for overriding e.g. sub-menu-item.
         */
        this.keepOpenOnClick = false;
        this.type = 'menuitem';
    }
    onClick() {
        if (this.keepOpen || this.keepOpenOnClick)
            return;
        this.dispatchEvent(createDefaultCloseMenuEvent(this, { kind: CLOSE_REASON.CLICK_SELECTION }));
    }
    getRenderClasses() {
        return {
            ...super.getRenderClasses(),
            'has-focus-ring': this.hasFocusRing,
        };
    }
    onFocusRingVisibilityChanged(e) {
        const focusRing = e.target;
        this.hasFocusRing = focusRing.visible;
    }
    onKeydown(event) {
        if (this.keepOpen)
            return;
        const keyCode = event.code;
        if (!event.defaultPrevented && isClosableKey(keyCode)) {
            event.preventDefault();
            this.dispatchEvent(createDefaultCloseMenuEvent(this, { kind: CLOSE_REASON.KEYDOWN, key: keyCode }));
        }
    }
}
__decorate([
    property({ type: Boolean, attribute: 'md-menu-item', reflect: true })
], MenuItemEl.prototype, "isMenuItem", void 0);
__decorate([
    property({ type: Boolean, attribute: 'keep-open' })
], MenuItemEl.prototype, "keepOpen", void 0);
__decorate([
    state()
], MenuItemEl.prototype, "hasFocusRing", void 0);
//# sourceMappingURL=menu-item.js.map