//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:list';
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use '../../elevation/elevation';
@use '../../focus/focus-ring';
@use '../../list/list' as md-list;
@use '../../list/list-item';
@use '../../tokens';
// go/keep-sorted end

@mixin theme($tokens) {
  $supported-tokens: tokens.$md-comp-menu-supported-tokens;

  @each $token, $value in $tokens {
    @if list.index($supported-tokens, $token) == null {
      @error 'Token `#{$token}` is not a supported token.';
    }

    @if $value {
      --md-menu-#{$token}: #{$value};
    }
  }
}

@mixin styles() {
  $tokens: tokens.md-comp-menu-values();

  :host {
    @each $token, $value in $tokens {
      --_#{$token}: var(--md-menu-#{$token}, #{$value});
    }

    @include md-list.theme(
      (
        'container-color': var(--_container-color),
      )
    );

    @include elevation.theme(
      (
        'level': var(--_container-elevation),
        'shadow-color': var(--_container-shadow-color),
      )
    );

    min-width: 300px;
  }

  md-focus-ring {
    @include focus-ring.theme(
      (
        'shape': var(--_container-shape),
      )
    );
  }

  .menu {
    border-radius: var(--_container-shape);
    display: none;
    opacity: 0;
    z-index: 20;
    position: absolute;
    user-select: none;
    max-height: inherit;
    height: inherit;
    min-width: inherit;

    &.fixed {
      position: fixed;
    }

    md-list {
      height: inherit;
      max-height: inherit;
      display: block;
      overflow: auto;
      min-width: inherit;
      border-radius: inherit;
    }

    &.has-overflow md-list {
      overflow: visible;
    }

    &.animating md-list {
      pointer-events: none;
      overflow: hidden;
    }

    &.animating ::slotted(.md-menu-hidden) {
      opacity: 0;
    }

    slot {
      display: block;
      height: inherit;
      max-height: inherit;
    }
  }
}
