/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import '../../focus/md-focus-ring.js';
import '../../ripple/ripple.js';
import { LitElement, nothing, TemplateResult } from 'lit';
import { ClassInfo } from 'lit/directives/class-map.js';
/**
 * A chip component.
 */
export declare abstract class Chip extends LitElement {
    /** @nocollapse */
    static shadowRootOptions: {
        delegatesFocus: boolean;
        mode: ShadowRootMode;
        slotAssignment?: SlotAssignmentMode;
    };
    disabled: boolean;
    label: string;
    /**
     * The `id` of the action the primary focus ring and ripple are for.
     */
    protected abstract readonly primaryId: string;
    /**
     * Whether or not the primary ripple is disabled (defaults to `disabled`).
     * Some chip actions such as links cannot be disabled.
     */
    protected get rippleDisabled(): boolean;
    protected render(): unknown;
    protected abstract renderContainer(content: unknown): unknown;
    protected getContainerClasses(): {
        disabled: boolean;
    };
    protected renderContainerContent(): TemplateResult<1>;
    protected renderOutline(): TemplateResult<1>;
    protected renderLeadingIcon(): TemplateResult;
    protected abstract renderPrimaryAction(content: unknown): unknown;
    private renderPrimaryContent;
}
/**
 * Renders a chip container that follows the grid/row/cell a11y pattern.
 *
 * This renders the container with `role="row"`.
 */
export declare function renderGridContainer(content: unknown, classes: ClassInfo): TemplateResult<1>;
/**
 * Renders a chip action that follows the grid/row/cell a11y pattern.
 *
 * This wraps actions in a `role="cell"` div.
 */
export declare function renderGridAction(content: unknown): TemplateResult<1> | typeof nothing;
