/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import '../../elevation/elevation.js';
import '../../focus/md-focus-ring.js';
import '../../ripple/ripple.js';
import { LitElement, PropertyValues } from 'lit';
/**
 * An element that can select items.
 */
export interface Tabs extends HTMLElement {
    selected?: number;
    selectedItem?: Tab;
    previousSelectedItem?: Tab;
}
/**
 * Tab variant can be `primary` or `secondary`.
 */
export type TabVariant = 'primary' | 'secondary';
/**
 * Tab component.
 */
export declare class Tab extends LitElement {
    /** @nocollapse */
    static shadowRootOptions: ShadowRootInit;
    /**
     * Styling variant to display, 'primary' (default) or 'secondary'.
     */
    variant: TabVariant;
    /**
     * Whether or not the tab is `disabled`.
     */
    disabled: boolean;
    /**
     * Whether or not the tab is `selected`.
     **/
    selected: boolean;
    /**
     * Whether or not the tab is `focusable`.
     */
    focusable: boolean;
    /**
     * Whether or not the icon renders inline with label or stacked vertically.
     */
    inlineIcon: boolean;
    private readonly button;
    /**
     * Selection indicator element.
     */
    readonly indicator: HTMLElement;
    constructor();
    focus(): void;
    blur(): void;
    protected render(): import("lit-html").TemplateResult<1>;
    protected updated(changed: PropertyValues): void;
    private readonly handleActivationClick;
    private get tabs();
    private animateSelected;
    private getKeyframes;
}
